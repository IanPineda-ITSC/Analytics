WITH

TRANSACCIONES_SESSIONM AS (
    SELECT
        USER_ID,
        EMAIL,
        CHECK_AMOUNT/1.16 AS VENTA,
        FECHA
    FROM 
        SEGMENT_EVENTS.SESSIONM_SBX.SM_TRANSACTION_HEADERS AS TXN
    INNER JOIN 
    (
        SELECT DISTINCT 
            TRANSACTION_ID, 
            USER_ID
        FROM
            SEGMENT_EVENTS.SESSIONM_SBX.SM_TRANSACTION_PAYMENTS
    ) AS Q
    USING(
        TRANSACTION_ID
    )  
    INNER JOIN
        SEGMENT_EVENTS.SESSIONM_SBX.SM_USERS
    USING(
        USER_ID
    )
    INNER JOIN
        WOW_REWARDS.WORK_SPACE_WOW_REWARDS.DS_DIM_TIME
    ON
        TRANSACTION_DATE = FECHA
    WHERE 
        TXN.CHANNEL<> 'API'
    AND
        TXN.TRANSACTION_ID NOT IN 
        (
            SELECT DISTINCT  
                TRANSACTION_ID 
            FROM 
                SEGMENT_EVENTS.SESSIONM_SBX.SM_TRANSACTION_ITEMS
            WHERE 
                POS_ITEM_KEY = 'MEXLEG_106_sbx'
        ) 
),

TRANSACCIONES_LOYALTY AS (
    SELECT
        TXN.MEMBER_ID AS USER_ID,
        PERSONS.EMAIL,
        TXN.AMOUNT/1.16 VENTA,
        to_date(TXN.TRANSACTION_DATE, 'dd/mm/yy HH24:MI:SS') AS FECHA
    FROM
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_TRANSACTION_ALL" TXN
    INNER JOIN
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_MEMBER_ALL" MEM
    ON 
        MEM.ID = TXN.MEMBER_ID 
    INNER JOIN 
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_BRANCH_ALL" BRA 
    ON 
        BRA.ID=TXN.BRANCH
    LEFT JOIN 
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_DELIVERYMETHOD_ALL" P
    ON
        P.TICKET_NUMBER=TXN.ORDERNUMBER
    AND 
        TO_CHAR(TO_DATE(TXN.TRANSACTION_DATE, 'dd/mm/yy HH24:MI:SS'), 'YYYY-MM-DD') = TO_CHAR(TO_DATE(P.CREATION_DATE, 'dd/mm/yy HH24:MI:SS'), 'YYYY-MM-DD')
    INNER JOIN
        SEGMENT_EVENTS.STARBUCKS_REWARDS_MX.ALSE_LOY_PERSON_ALL AS PERSONS
    ON
        MEM.ID_PERSON = PERSONS.ID
    WHERE
        TXN.PROCESSING_SUB_STATUS IN ('ORA_TXN_SUB_STAT_SUCCESS','ORA_TXN_SUB_STAT_NO_PROMO_QF')
    AND 
        TXN.STATUS='ORA_TXN_STAT_PROCESSED'
    AND 
        TXN.TRANSACTION_TYPE='ORA_TXN_ACC'
    AND 
        TXN.BRANCH_NAME_BI<>'Lab_QA'
    AND 
        TXN.PART_SEARCH='Ticket'
),

TRANSACCIONES_TOTALES AS (
    SELECT
        *
    FROM
        TRANSACCIONES_SESSIONM

    UNION ALL

    SELECT
        *
    FROM
        TRANSACCIONES_LOYALTY
),

VENTA_POR_SEMANA_Y_SEGMENTO AS (
    SELECT
        sum(VENTA) AS VENTA,
        ANIO_ALSEA,
        SEM_ALSEA,
        FLAG_GC,
        ULTRASEGMENTO
    FROM
        TRANSACCIONES_TOTALES
    INNER JOIN 
        "SBX_MX"."SBX_SR_MX_RAKEN"."DS_DIM_TIME" T
    USING(
        FECHA
    )
    INNER JOIN
        WOW_REWARDS.SBX_REWARDS.SEGMENTACION_ACTIVOS AS SEGMENTACION
    ON
        lower(SEGMENTACION.EMAIL) = lower(TRANSACCIONES_TOTALES.EMAIL)
    AND
        SEGMENTACION.YEAR_WEEK = ANIO_ALSEA || '-' || SEM_ALSEA
    GROUP BY
        ANIO_ALSEA,
        SEM_ALSEA,
        FLAG_GC,
        ULTRASEGMENTO
),

VENTAS_PIVOTED AS (
    SELECT 
        ANIO_ALSEA,
        SEM_ALSEA,
        ULTRASEGMENTO,
        "'GP'" AS VENTAS_GP,
        "'GC'" AS VENTAS_GC
    FROM 
        VENTA_POR_SEMANA_Y_SEGMENTO
    PIVOT(sum(VENTA) FOR FLAG_GC IN ('GP', 'GC'))
),

USUARIOS_POR_SEMANA_Y_SEGMENTO AS (
    SELECT
        count(DISTINCT SEGMENTACION.EMAIL) AS USUARIOS,
        FLAG_GC,
        ULTRASEGMENTO,
        split_part(YEAR_WEEK, '-', 1) AS ANIO_ALSEA,
        split_part(YEAR_WEEK, '-', 2) AS SEM_ALSEA
    FROM
        WOW_REWARDS.SBX_REWARDS.SEGMENTACION_ACTIVOS AS SEGMENTACION
    GROUP BY
        FLAG_GC,
        ULTRASEGMENTO,
        YEAR_WEEK
),

USUARIOS_PIVOTED AS (
    SELECT 
        "'GP'" AS USUARIOS_GP,
        "'GC'" AS USUARIOS_GC,
        ULTRASEGMENTO,
        ANIO_ALSEA,
        SEM_ALSEA
    FROM 
        USUARIOS_POR_SEMANA_Y_SEGMENTO
    PIVOT(sum(USUARIOS) FOR FLAG_GC IN ('GP', 'GC'))
)

SELECT
    *,
    VENTAS_GC / USUARIOS_GC AS GASTO_PROMEDIO_GC,
    VENTAS_GP / USUARIOS_GP AS GASTO_PROMEDIO_GP,
    GASTO_PROMEDIO_GP / GASTO_PROMEDIO_GC - 1 AS LIFT,
    VENTAS_GP * LIFT AS VENTA_INCREMENTAL,
    ULTRASEGMENTO
FROM
    VENTAS_PIVOTED
INNER JOIN
    USUARIOS_PIVOTED
USING(
    ULTRASEGMENTO,
    ANIO_ALSEA,
    SEM_ALSEA
)
ORDER BY
    ANIO_ALSEA DESC,
    SEM_ALSEA DESC,
    GASTO_PROMEDIO_GC
;