WITH

INTERVALO_FECHAS AS (
    SELECT
        to_date('2023-05-29') AS FECHA_INICIO_SEGMENTACION,
        to_date('2023-08-27') AS FECHA_FIN_SEGMENTACION,
        to_date('2023-05-29') AS FECHA_INICIO_MEDICION,
        to_date('2023-08-27') AS FECHA_FIN_MEDICION
),

TRANSACCIONES_BY_USER AS (
    SELECT
        EMAIL,
        sum(CHECK_AMOUNT / 1.16) AS VENTAS,
        count(DISTINCT TRANSACTION_ID) AS FREQ,
        VENTAS / FREQ AS AOV
    FROM
        SEGMENT_EVENTS.SESSIONM_SBX.FACT_TRANSACTIONS
    INNER JOIN
        INTERVALO_FECHAS
    ON
        to_date(CREATED_AT) BETWEEN FECHA_INICIO_SEGMENTACION AND FECHA_FIN_SEGMENTACION
    WHERE
        EMAIL IS NOT null
    GROUP BY
        EMAIL
),

SEGMENTACION_BASE_ACTIVOS AS (
    SELECT 
        EMAIL,
        CASE
            WHEN FREQ <= PERCENTILE_CONT(0.20) WITHIN GROUP (ORDER BY FREQ) OVER () THEN 'LIGHT'
            WHEN FREQ <= PERCENTILE_CONT(0.40) WITHIN GROUP (ORDER BY FREQ) OVER () THEN 'MIDL'
            WHEN FREQ <= PERCENTILE_CONT(0.60) WITHIN GROUP (ORDER BY FREQ) OVER () THEN 'MIDH'
            WHEN FREQ <= PERCENTILE_CONT(0.80) WITHIN GROUP (ORDER BY FREQ) OVER () THEN 'HEAVY'
            ELSE 'SUPER'
        END AS SEGMENTO,
        CASE
            WHEN AOV <= ROUND(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY AOV) OVER ()) THEN 'LOW'
            WHEN AOV <= ROUND(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY AOV) OVER ()) THEN 'AVG'
            ELSE 'HIGH'
        END AS TAG_GRUPO,
        SEGMENTO || '_' || TAG_GRUPO AS FULL_SEGMENTO,
        CASE
            WHEN FULL_SEGMENTO IN ('LIGHT_LOW', 'LIGHT_AVG', 'LIGHT_HIGH', 'MIDL_LOW', 'MIDL_AVG', 'MIDH_LOW') THEN 'LOW'
            WHEN FULL_SEGMENTO IN ('MIDL_HIGH', 'MIDH_AVG', 'MIDH_HIGH', 'HEAVY_LOW', 'HEAVY_AVG') THEN 'MEDIUM' 
            WHEN FULL_SEGMENTO IN ('HEAVY_HIGH', 'SUPER_LOW', 'SUPER_AVG') THEN 'HIGH'
            ELSE 'TOP'
        END AS ULTRASEGMENTO
    FROM
        TRANSACCIONES_BY_USER
),

VENTAS_POR_DAYPART AS (
    SELECT
        EMAIL,
        CASE 
            WHEN to_time('06:00:00') <= to_time(CREATED_AT) AND to_time(CREATED_AT) < to_time('11:00:00') THEN 'MORNING'
            WHEN to_time('13:00:00') <= to_time(CREATED_AT) AND to_time(CREATED_AT) < to_time('14:00:00') THEN 'LUNCH'
            WHEN to_time('14:00:00') <= to_time(CREATED_AT) AND to_time(CREATED_AT) < to_time('17:00:00') THEN 'AFTERNOON'
            ELSE 'EVENING'
        END AS DAYPART,
        count(DISTINCT TRANSACTION_ID) AS VISITAS
    FROM
        SEGMENT_EVENTS.SESSIONM_SBX.FACT_TRANSACTIONS
    INNER JOIN
        INTERVALO_FECHAS
    ON
        FECHA_INICIO_MEDICION <= to_date(CREATED_AT) 
    AND
        to_date(CREATED_AT) <= FECHA_FIN_MEDICION
    GROUP BY
        EMAIL,
        DAYPART
)

SELECT DISTINCT
    ULTRASEGMENTO,
    last_value(DAYPART) OVER (PARTITION BY ULTRASEGMENTO ORDER BY sum(VISITAS)) AS DAYPART_MAYORES_VISITAS,
    last_value(sum(VISITAS)) OVER (PARTITION BY ULTRASEGMENTO ORDER BY sum(VISITAS)) AS MAYORES_VISITAS,
    first_value(DAYPART) OVER (PARTITION BY ULTRASEGMENTO ORDER BY sum(VISITAS)) AS DAYPART_MENORES_VISITAS,
    first_value(sum(VISITAS)) OVER (PARTITION BY ULTRASEGMENTO ORDER BY sum(VISITAS)) AS MENORES_VISITAS
FROM
    SEGMENTACION_BASE_ACTIVOS
INNER JOIN
    VENTAS_POR_DAYPART
USING(
    EMAIL
)
GROUP BY
    ULTRASEGMENTO,
    DAYPART
ORDER BY
    CASE
        WHEN ULTRASEGMENTO = 'LOW' THEN 1
        WHEN ULTRASEGMENTO = 'MEDIUM' THEN 2
        WHEN ULTRASEGMENTO = 'HIGH' THEN 3
        WHEN ULTRASEGMENTO = 'TOP' THEN 4
    END
;