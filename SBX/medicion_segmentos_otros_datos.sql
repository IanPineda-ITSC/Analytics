WITH

TRANSACCIONES_TOTALES AS (
    SELECT 
        SEM_ALSEA, 
        ANIO_ALSEA,
        CHECK_AMOUNT/1.16 AS VENTA, 
        TRANSACTION_ID,
        EMAIL
    FROM 
        "SEGMENT_EVENTS"."SESSIONM_SBX"."FACT_TRANSACTIONS" A
    INNER JOIN 
        "WOW_REWARDS"."WORK_SPACE_WOW_REWARDS"."DS_DIM_TIME" T
    ON 
        to_date(CREATED_AT) = T.FECHA
),

SEGMENTACION AS (
    SELECT DISTINCT
        EMAIL,
        ULTRASEGMENTO,
        YEAR_WEEK
    FROM
        WOW_REWARDS.SBX_REWARDS.SEGMENTACION_ACTIVOS
)

SELECT
    sum(VENTA) AS VENTAS,
    count(DISTINCT TRANSACTION_ID) AS ORDENES,
    count(DISTINCT TRANSACCIONES_TOTALES.EMAIL) AS USUARIOS,
    count(DISTINCT SEGMENTACION.EMAIL) AS USUARIOS_TOTALES_SEGMENTACION,
    coalesce(SEM_ALSEA, split_part(YEAR_WEEK, '-', 2)) AS SEMANA,
    coalesce(ANIO_ALSEA, split_part(YEAR_WEEK, '-', 1)) AS ANIO,
    -- CASE 
    --     WHEN ULTRASEGMENTO IS NOT NULL THEN ULTRASEGMENTO
    --     ELSE 'ACTIVADOS'
    -- END AS SEGMENTO,
    VENTAS/USUARIOS AS CLV,
    VENTAS/ORDENES AS TICKET_PROMEDIO,
    ORDENES/USUARIOS AS FRECUENCIA
FROM
    SEGMENTACION
FULL OUTER JOIN
    TRANSACCIONES_TOTALES
ON
    SEGMENTACION.EMAIL = TRANSACCIONES_TOTALES.EMAIL
AND
    YEAR_WEEK = ANIO_ALSEA || '-' || SEM_ALSEA
WHERE
    SEGMENTACION.YEAR_WEEK = '2023-33'
OR
(
    TRANSACCIONES_TOTALES.ANIO_ALSEA = 2023
    AND
    TRANSACCIONES_TOTALES.SEM_ALSEA = 33
)
GROUP BY
    -- SEGMENTO,
    ANIO,
    SEMANA
ORDER BY
    ANIO DESC,
    SEMANA DESC
    -- CASE SEGMENTO
    --     WHEN 'LOW' THEN 1
    --     WHEN 'MEDIUM' THEN 2
    --     WHEN 'HIGH' THEN 3
    --     WHEN 'TOP' THEN 4
    -- END
;