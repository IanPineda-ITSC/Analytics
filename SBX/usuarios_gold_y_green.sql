WITH

INTERVALO_FECHAS AS (
    -- Fecha de inicio y final que vamos a usar para la segmentacion
    SELECT
        to_date('2023-04-03') AS FECHA_INICIO,
        to_date('2023-05-29') AS INICIO_JUNIO,
        to_date('2023-07-02') AS FECHA_FIN
),

TRANSACCIONES_BY_USER_LOYALTY_ACTIVOS AS (
    SELECT
        PERSONS.EMAIL
    FROM
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_TRANSACTION_ALL" TXN
    INNER JOIN
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_MEMBER_ALL" MEM
    ON 
        MEM.ID = TXN.MEMBER_ID 
    INNER JOIN 
        "SBX_MX"."SBX_SR_MX_RAKEN"."DS_DIM_TIME" T 
    ON 
        T.FECHA = TO_DATE(TXN.TRANSACTION_DATE, 'dd/mm/yy HH24:MI:SS')
    INNER JOIN
        SEGMENT_EVENTS.STARBUCKS_REWARDS_MX.ALSE_LOY_PERSON_ALL AS PERSONS
    ON
        MEM.ID_PERSON = PERSONS.ID
    INNER JOIN
        INTERVALO_FECHAS
    ON
        to_date(TXN.TRANSACTION_DATE, 'dd/mm/yy HH24:MI:SS') BETWEEN FECHA_INICIO AND FECHA_FIN
    WHERE
        TXN.PROCESSING_SUB_STATUS IN ('ORA_TXN_SUB_STAT_SUCCESS','ORA_TXN_SUB_STAT_NO_PROMO_QF')
    AND 
        TXN.STATUS='ORA_TXN_STAT_PROCESSED'
    AND 
        TXN.TRANSACTION_TYPE='ORA_TXN_ACC'
    AND 
        TXN.BRANCH_NAME_BI<>'Lab_QA'
    AND 
        TXN.PART_SEARCH='Ticket'
    GROUP BY
        PERSONS.EMAIL,
        MEM.JOING_DATE
),

TRANSACCIONES_BY_USER_SESSIONM_ACTIVOS AS (
    SELECT
        EMAIL
    FROM 
        "SEGMENT_EVENTS"."SESSIONM_SBX"."SM_TRANSACTION_HEADERS" TXN
    INNER JOIN 
    (
        SELECT DISTINCT 
            TRANSACTION_ID, 
            USER_ID
        FROM 
            "SEGMENT_EVENTS"."SESSIONM_SBX"."SM_TRANSACTION_PAYMENTS"
    ) AS Q
    USING(
        TRANSACTION_ID
    )
    INNER JOIN
        SEGMENT_EVENTS.SESSIONM_SBX.SM_USERS
    USING(
        USER_ID
    )
    INNER JOIN
        INTERVALO_FECHAS
    ON
        TRANSACTION_DATE BETWEEN FECHA_INICIO AND FECHA_FIN
    WHERE 
        TXN.CHANNEL<> 'API'
    AND
        TXN.TRANSACTION_ID NOT IN 
        (
            SELECT DISTINCT  
                TRANSACTION_ID 
            FROM 
                SEGMENT_EVENTS.SESSIONM_SBX.SM_TRANSACTION_ITEMS
            WHERE 
                POS_ITEM_KEY IN (
                    'MEXLEG_106_sbx',
                    'MEXLEG_109_sbx'
                ) 
        )
    GROUP BY
        USER_ID,
        EMAIL
),

ACTIVOS AS (
    SELECT DISTINCT
        EMAIL
    FROM
    (
        SELECT * FROM TRANSACCIONES_BY_USER_LOYALTY_ACTIVOS
        UNION ALL
        SELECT * FROM TRANSACCIONES_BY_USER_SESSIONM_ACTIVOS
    )
),

TRANSACCIONES_BY_USER_LOYALTY_JUNIO AS (
    SELECT
        PERSONS.EMAIL
    FROM
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_TRANSACTION_ALL" TXN
    INNER JOIN
        "SEGMENT_EVENTS"."STARBUCKS_REWARDS_MX"."ALSE_LOY_MEMBER_ALL" MEM
    ON 
        MEM.ID = TXN.MEMBER_ID 
    INNER JOIN 
        "SBX_MX"."SBX_SR_MX_RAKEN"."DS_DIM_TIME" T 
    ON 
        T.FECHA = TO_DATE(TXN.TRANSACTION_DATE, 'dd/mm/yy HH24:MI:SS')
    INNER JOIN
        SEGMENT_EVENTS.STARBUCKS_REWARDS_MX.ALSE_LOY_PERSON_ALL AS PERSONS
    ON
        MEM.ID_PERSON = PERSONS.ID
    INNER JOIN
        INTERVALO_FECHAS
    ON
        to_date(TXN.TRANSACTION_DATE, 'dd/mm/yy HH24:MI:SS') BETWEEN INICIO_JUNIO AND FECHA_FIN
    WHERE
        TXN.PROCESSING_SUB_STATUS IN ('ORA_TXN_SUB_STAT_SUCCESS','ORA_TXN_SUB_STAT_NO_PROMO_QF')
    AND 
        TXN.STATUS='ORA_TXN_STAT_PROCESSED'
    AND 
        TXN.TRANSACTION_TYPE='ORA_TXN_ACC'
    AND 
        TXN.BRANCH_NAME_BI<>'Lab_QA'
    AND 
        TXN.PART_SEARCH='Ticket'
    GROUP BY
        PERSONS.EMAIL,
        MEM.JOING_DATE
),

TRANSACCIONES_BY_USER_SESSIONM_JUNIO AS (
    SELECT
        EMAIL
    FROM 
        "SEGMENT_EVENTS"."SESSIONM_SBX"."SM_TRANSACTION_HEADERS" TXN
    INNER JOIN 
    (
        SELECT DISTINCT 
            TRANSACTION_ID, 
            USER_ID
        FROM 
            "SEGMENT_EVENTS"."SESSIONM_SBX"."SM_TRANSACTION_PAYMENTS"
    ) AS Q
    USING(
        TRANSACTION_ID
    )
    INNER JOIN
        SEGMENT_EVENTS.SESSIONM_SBX.SM_USERS
    USING(
        USER_ID
    )
    INNER JOIN
        INTERVALO_FECHAS
    ON
        TRANSACTION_DATE BETWEEN INICIO_JUNIO AND FECHA_FIN
    WHERE 
        TXN.CHANNEL<> 'API'
    AND
        TXN.TRANSACTION_ID NOT IN 
        (
            SELECT DISTINCT  
                TRANSACTION_ID 
            FROM 
                SEGMENT_EVENTS.SESSIONM_SBX.SM_TRANSACTION_ITEMS
            WHERE 
                POS_ITEM_KEY IN (
                    'MEXLEG_106_sbx',
                    'MEXLEG_109_sbx'
                ) 
        )
    GROUP BY
        USER_ID,
        EMAIL
),

JUNIO AS (
    SELECT DISTINCT
        EMAIL
    FROM
    (
        SELECT * FROM TRANSACCIONES_BY_USER_LOYALTY_JUNIO
        UNION ALL
        SELECT * FROM TRANSACCIONES_BY_USER_SESSIONM_JUNIO
    )
),

TIER_BY_USER AS (
    SELECT DISTINCT
        USER_ID,
        LAST_VALUE(NAME) OVER (PARTITION BY USER_ID ORDER BY LAST_UPDATED_AT ASC) AS TIER
    FROM 
        SEGMENT_EVENTS.SESSIONM_SBX.SM_TIER_MEMBER_HISTORY
    INNER JOIN
        SEGMENT_EVENTS.SESSIONM_SBX.SM_TIER_LEVELS
    USING(
        TIER_LEVEL_ID
    )
    WHERE
        EXITED_AT IS null
    QUALIFY
        TIER IN ('Gold', 'Green')
)

SELECT
    TIER,
    sum(CASE WHEN ACTIVOS.EMAIL IS NOT NULL THEN 1 ELSE 0 END) AS ACTIVOS,
    sum(CASE WHEN JUNIO.EMAIL IS NOT NULL THEN 1 ELSE 0 END) AS JUNIO
FROM
    TIER_BY_USER
INNER JOIN
    SEGMENT_EVENTS.SESSIONM_SBX.SM_USERS
ON
    lower(SM_USERS.USER_ID) = lower(TIER_BY_USER.USER_ID)
LEFT JOIN
    ACTIVOS
ON
    lower(ACTIVOS.EMAIL) = lower(SM_USERS.EMAIL)
LEFT JOIN
    JUNIO
ON
    lower(JUNIO.EMAIL) = lower(SM_USERS.EMAIL)
GROUP BY
    TIER
;