WITH

RANGO_DE_FECHAS AS (
    SELECT
        ANIO_ALSEA,
        MES_ALSEA,
        max(to_date(FECHA)) AS FECHA_FIN,
        FECHA_FIN - 180 AS FECHA_INICIO_ACTIVOS,
        FECHA_FIN - 365 AS FECHA_INICIO_INACTIVOS
    FROM
        WOW_REWARDS.WORK_SPACE_WOW_REWARDS.DS_DIM_TIME
    WHERE
        ANIO_ALSEA = 2023
    AND
        MES_ALSEA IN (5,6,7,8,9)
    GROUP BY
        ANIO_ALSEA,
        MES_ALSEA
),

TRANSACCIONES_OLO AS (
    SELECT DISTINCT
        lower(MXP.EMAIL) AS EMAIL,
        ORDER_DATE AS FECHA,
        TO_CHAR(ORDER_DATE,'YYYY-MM-DD') || '-' || LOCATION_CODE || '-' || OLO.ORDER_NUMBER AS ORDER_ID,
        OLO.ORDERFINALPRICE / 1.16 AS ORDER_AMOUNT,
        PHONENUMBER AS PHONE,
        FIRSTNAME
    FROM
       "SEGMENT_EVENTS"."DOMINOS_OLO"."MXPOWERSALESLOG" MXP
    INNER JOIN 
        "SEGMENT_EVENTS"."DOMINOS_OLO"."DPMSALES_FULL" OLO
    ON 
        OLO.ORDER_NUMBER = MXP.ORDERNUMBER AND OLO.LOCATION_CODE = MXP.STORENUMBER 
    AND 
        TO_CHAR(OLO.ORDER_DATE,'YYYY-MM-DD') = MXP.ORDERDATE
    WHERE 
        OLO.ORDER_STATUS_CODE = 4
    AND 
        OLO.LOCATION_CODE NOT IN ('13001' , '13006', '13021', '11000')
    AND 
        UPPER(OLO.SOURCE_CODE) IN (
            'ANDROID', 
            'DESKTOP', 
            'IOS', 
            'MOBILE', 
            'WEB', 
            'ANDROID2', 
            'DESKTOP2', 
            'IOSAPP', 
            'MOBILE2', 
            'WHATSAPP'
        )
),

TRANSACCIONES_CLOUD AS (
    SELECT DISTINCT 
        lower(A.EMAIL) AS EMAIL,
        to_date(SUBSTRING(A.STOREORDERID,1,10)) AS FECHA,
        split_part(A.STOREORDERID, '#', 1) || '-' || A.STOREID || '-' || split_part(A.STOREORDERID, '#', 2) AS ORDER_ID,
        PAYMENTSAMOUNT / 1.16 AS ORDER_AMOUNT,
        PHONE,
        FIRSTNAME
    FROM 
        "SEGMENT_EVENTS"."DOMINOS_GOLO"."VENTA_CLOUD" A
    WHERE 
        A.STOREID NOT LIKE '9%'
    AND 
        A.SOURCEORGANIZATIONURI IN (
            'order.dominos.com', 
            'resp-order.dominos.com', 
            'iphone.dominos.mx', 
            'android.dominos.mx'
        )
),

TRANSACCIONES_OLO_Y_CLOUD AS (
    SELECT * FROM TRANSACCIONES_OLO
    UNION ALL
    SELECT * FROM TRANSACCIONES_CLOUD
),

TRANSACCIONES_ACTIVOS AS (
    SELECT DISTINCT
        ANIO_ALSEA,
        MES_ALSEA,
        TRANSACCIONES_OLO_Y_CLOUD.*,
        row_number() OVER (PARTITION BY EMAIL, ANIO_ALSEA, MES_ALSEA ORDER BY FECHA) AS ROW_NUM
    FROM
        TRANSACCIONES_OLO_Y_CLOUD
    INNER JOIN 
        RANGO_DE_FECHAS
    ON
        FECHA <= FECHA_FIN
    AND
        FECHA_INICIO_ACTIVOS <= FECHA
),

TRANSACCIONES_ACTIVOS_BY_USER AS (
    SELECT
        A.ANIO_ALSEA,
        A.MES_ALSEA,
        A.EMAIL,
        count(DISTINCT A.ORDER_ID) AS FREQ,
        sum(A.ORDER_AMOUNT) AS VENTAS,
        VENTAS / FREQ AS AOV,
        avg(B.FECHA - A.FECHA) AS TIEMPO_ENTRE_COMPRAS
    FROM 
        TRANSACCIONES_ACTIVOS AS A
    LEFT JOIN
        TRANSACCIONES_ACTIVOS AS B
    ON
        A.EMAIL = B.EMAIL
    AND
        A.ROW_NUM + 1 = B.ROW_NUM
    AND
        A.ANIO_ALSEA = B.ANIO_ALSEA
    AND
        A.MES_ALSEA = B.MES_ALSEA
    GROUP BY
        A.ANIO_ALSEA,
        A.MES_ALSEA,
        A.EMAIL
),

PERCENTILES_AOV AS (
    SELECT DISTINCT
        ANIO_ALSEA,
        MES_ALSEA,
        round(percentile_cont(0.25) WITHIN GROUP (ORDER BY TRANSACCIONES_ACTIVOS_BY_USER.AOV) OVER (PARTITION BY ANIO_ALSEA, MES_ALSEA)) p25th_AOV,
        round(percentile_cont(0.75) WITHIN GROUP (ORDER BY TRANSACCIONES_ACTIVOS_BY_USER.AOV) OVER (PARTITION BY ANIO_ALSEA, MES_ALSEA)) p75th_AOV
    FROM
        TRANSACCIONES_ACTIVOS_BY_USER
),

SEGMENTACION_BASE_ACTIVOS AS (
    SELECT 
        ANIO_ALSEA,
        MES_ALSEA,
        EMAIL,
        CASE
            WHEN FREQ <= 1 THEN 'NUEVOS'
            WHEN FREQ <  4 THEN 'LIGHT'
            WHEN FREQ <  6 THEN 'MID'
            ELSE                'HEAVY'
        END AS SEGMENTO_FREQUENCY,
        CASE
            WHEN AOV <= p25th_AOV THEN 'LOW'
            WHEN AOV <= p75th_AOV THEN 'AVG'
            ELSE                       'HIGH'
        END AS SEGMENTO_AOV,
        (SEGMENTO_FREQUENCY || '_' || SEGMENTO_AOV) AS FULL_SEGMENTO,
        CASE 
            WHEN FULL_SEGMENTO IN ('NUEVOS_LOW','NUEVOS_AVG','LIGHT_LOW') THEN 'LOW_VALUE'
            WHEN FULL_SEGMENTO IN ('LIGHT_AVG','NUEVOS_HIGH','LIGHT_HIGH') THEN 'MEDIUM_LOW_VALUE'
            WHEN FULL_SEGMENTO IN ('MID_LOW','MID_AVG','HEAVY_LOW') THEN 'MEDIUM_HIGH_VALUE'
            WHEN FULL_SEGMENTO IN ('HEAVY_AVG','MID_HIGH') THEN 'HIGH_VALUE'
            WHEN FULL_SEGMENTO IN ('HEAVY_HIGH') THEN 'TOP_VALUE'
        END  AS SEGMENTO,
        TIEMPO_ENTRE_COMPRAS
    FROM
        TRANSACCIONES_ACTIVOS_BY_USER
    INNER JOIN
        PERCENTILES_AOV
    USING(
        ANIO_ALSEA,
        MES_ALSEA
    )
)

SELECT
    ANIO_ALSEA,
    MES_ALSEA,
    SEGMENTO,
    avg(TIEMPO_ENTRE_COMPRAS)
FROM
    SEGMENTACION_BASE_ACTIVOS
GROUP BY
    ANIO_ALSEA,
    MES_ALSEA,
    SEGMENTO