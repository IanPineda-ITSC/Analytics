WITH 

RANGO_DE_FECHAS AS (
    -- Seleccionamos el rango de fechas para el cual queremos generar la segmentacion
    SELECT
        current_date() - 365 AS FECHA_INICIO_INACTIVOS,
        current_date() - 180 AS FECHA_INICIO_ACTIVOS,
        current_date() AS FECHA_FIN
),

VENTAS_ANY_BRAND AS (
    -- Filtramos solo las compras que sean validas
    SELECT
        *
    FROM
        WOW_REWARDS.WORK_SPACE_WOW_REWARDS.DS_VENTAS_ORDENES_WOW
    WHERE
        POS_EMPLOYEE_ID NOT IN ('Power', '1 service cloud')
),

VENTAS_RESTAURANTES AS (
    SELECT
        CASE 
            WHEN MARCA IN ('ITS JUST WINGS','CHILIS MEXICO') THEN 'CHILIS'
            ELSE MARCA
        END AS BRAND,
        TRANSACTION_ID,
        VENTAS,
        EMAIL,
        to_date(DATETIME) AS FECHA
    FROM
        VENTAS_ANY_BRAND
    WHERE
        MARCA IN (
            'THE CHEESECAKE FACTORY MEXICO',
            'ITS JUST WINGS',
            'CHILIS MEXICO',
            'ITALIANNIS MEXICO',
            'P.F. CHANGS MEXICO',
            'VIPS MEXICO'
        )
),

PRIMERA_COMPRA_POR_MARCA AS (
    SELECT DISTINCT
        EMAIL,
        BRAND,
        min(FECHA) AS FECHA
    FROM
        VENTAS_RESTAURANTES
    GROUP BY
        EMAIL,
        BRAND
),

REGISTROS_TOTALES AS (
    SELECT
        EMAIL,
        min(to_date(TIMESTAMP)) AS FECHA_REGISTRO
    FROM
       SEGMENT_EVENTS.COREALSEA_PROD.REGISTRATION
    GROUP BY
        EMAIL
),

REGISTROS AS (
    SELECT
        REGISTROS_TOTALES.*,
        'REGISTROS' AS SEGMENTO,
        null AS MARCA
    FROM
        REGISTROS_TOTALES
    INNER JOIN
        RANGO_DE_FECHAS
    ON
        FECHA_REGISTRO < FECHA_INICIO_ACTIVOS
    LEFT JOIN
        VENTAS_ANY_BRAND
    USING(
        EMAIL
    )
    WHERE
        VENTAS_ANY_BRAND.EMAIL IS null
),

REGISTROS_SIN_COMPRA AS (
    SELECT
        REGISTROS_TOTALES.*,
        'REGISTROS_SIN_COMPRA' AS SEGMENTO,
        null AS MARCA
    FROM
        REGISTROS_TOTALES
    INNER JOIN
        RANGO_DE_FECHAS
    ON
        FECHA_REGISTRO BETWEEN FECHA_INICIO_ACTIVOS AND FECHA_FIN
    LEFT JOIN
        VENTAS_ANY_BRAND
    USING(
        EMAIL
    )
    WHERE
        VENTAS_ANY_BRAND.EMAIL IS null
),

NUEVOS_ACTIVOS AS (
    SELECT
        REGISTROS_TOTALES.*,
        'NUEVOS_ACTIVOS' AS SEGMENTO,
        min(BRAND) AS MARCA
    FROM
        REGISTROS_TOTALES
    INNER JOIN
        RANGO_DE_FECHAS
    ON
        FECHA_REGISTRO BETWEEN FECHA_INICIO_ACTIVOS AND FECHA_FIN
    LEFT JOIN
        VENTAS_RESTAURANTES
    ON
        lower(REGISTROS_TOTALES.EMAIL) = lower(VENTAS_RESTAURANTES.EMAIL)
    AND
        VENTAS_RESTAURANTES.FECHA BETWEEN FECHA_INICIO_ACTIVOS AND FECHA_FIN
    GROUP BY
        REGISTROS_TOTALES.EMAIL,
        FECHA_REGISTRO
    HAVING
        count(DISTINCT TRANSACTION_ID) = 1
),

VENTAS_ACTIVOS AS (
    SELECT
        BRAND,
        EMAIL,
        COUNT(DISTINCT TRANSACTION_ID) AS ORD,
        SUM(VENTAS) AS VENTAS
    FROM
        VENTAS_RESTAURANTES
    JOIN
        RANGO_DE_FECHAS
    WHERE
        FECHA BETWEEN FECHA_INICIO_ACTIVOS AND FECHA_FIN
    AND
        EMAIL NOT IN (SELECT EMAIL FROM NUEVOS_ACTIVOS)
    GROUP BY
        BRAND,
        EMAIL
),

ACTIVOS AS (
    SELECT
        EMAIL,
        ORD,
        BRAND AS MARCA,
        VENTAS AS SALES,
        VENTAS / ORD AS TICKET_PROMEDIO,
        CASE
            WHEN BRAND = 'VIPS MEXICO' AND ORD <= 3 THEN 'LOW VALUE'
            WHEN BRAND = 'VIPS MEXICO' AND ORD <= 12 THEN 'MEDIUM VALUE'
            WHEN BRAND = 'VIPS MEXICO' AND ORD <= 18 THEN 'HIGH VALUE'
            WHEN BRAND = 'VIPS MEXICO' THEN 'TOP VALUE'
            
            WHEN ORD < 2 THEN 'LOW VALUE'
            WHEN ORD < 4 THEN 'MEDIUM VALUE'
            WHEN ORD < 5 THEN 'HIGH VALUE'
            ELSE 'TOP VALUE'
        END AS SEGMENTO
    FROM
        VENTAS_ACTIVOS
),

INACTIVOS_Y_PERDIDOS AS (
    SELECT
        BRAND AS MARCA,
        EMAIL,
        max(FECHA) AS ULTIMA_VENTA,
        CASE
            WHEN ULTIMA_VENTA > FECHA_INICIO_INACTIVOS THEN 'INACTIVOS'
            ELSE 'PERDIDOS'
        END AS SEGMENTO
    FROM
        VENTAS_RESTAURANTES
    JOIN
        RANGO_DE_FECHAS
    GROUP BY
        BRAND,
        EMAIL,
        FECHA_INICIO_INACTIVOS,
        FECHA_INICIO_ACTIVOS
    HAVING
        ULTIMA_VENTA < FECHA_INICIO_ACTIVOS
),

SEGMENTACION_PRE_PIVOTED AS (
    SELECT
        EMAIL,
        SEGMENTO,
        MARCA
    FROM
        ACTIVOS

    UNION ALL

    SELECT
        EMAIL,
        SEGMENTO,
        MARCA
    FROM
        INACTIVOS_Y_PERDIDOS

    UNION ALL
    
    SELECT
        EMAIL,
        SEGMENTO,
        MARCA
    FROM
        NUEVOS_ACTIVOS
),

SEGMENTACION_PIVOTED AS (
    SELECT
        *
    FROM
        SEGMENTACION_PRE_PIVOTED
    PIVOT(min(SEGMENTO) FOR MARCA IN ('VIPS MEXICO', 'THE CHEESECAKE FACTORY MEXICO','CHILIS','ITALIANNIS MEXICO','P.F. CHANGS MEXICO'))
    AS T (EMAIL, SEGMENTO_VIPS, SEGMENTO_CHEESECAKE, SEGMENTO_CHILIS, SEGMENTO_ITALIANNIS, SEGMENTO_PF)
),

SEGMENTACION_TOTAL AS (
    SELECT
        SEGMENTO AS SEGMENTO_VIPS,
        SEGMENTO AS SEGMENTO_CHEESECAKE,
        SEGMENTO AS SEGMENTO_CHILIS,
        SEGMENTO AS SEGMENTO_ITALIANNIS,
        SEGMENTO AS SEGMENTO_PF,
        EMAIL
    FROM
        REGISTROS

    UNION ALL

    SELECT
        SEGMENTO AS SEGMENTO_VIPS,
        SEGMENTO AS SEGMENTO_CHEESECAKE,
        SEGMENTO AS SEGMENTO_CHILIS,
        SEGMENTO AS SEGMENTO_ITALIANNIS,
        SEGMENTO AS SEGMENTO_PF,
        EMAIL
    FROM
        REGISTROS_SIN_COMPRA

    UNION ALL

    SELECT
        SEGMENTO_VIPS, 
        SEGMENTO_CHEESECAKE, 
        SEGMENTO_CHILIS, 
        SEGMENTO_ITALIANNIS, 
        SEGMENTO_PF,
        EMAIL
    FROM
        SEGMENTACION_PIVOTED
        
),

INSTALLED_APP_ANDROID AS (
    SELECT
        USER_ID
    FROM
        SEGMENT_EVENTS.WOW_PROD_ANDROID.APPLICATION_OPENED
    INNER JOIN 
        RANGO_DE_FECHAS 
    ON
        to_date(TIMESTAMP) BETWEEN FECHA_INICIO_ACTIVOS AND FECHA_FIN
),

INSTALLED_APP_IOS AS (
    SELECT
        USER_ID
    FROM
        SEGMENT_EVENTS.WOW_PROD_IOS.APPLICATION_OPENED
    INNER JOIN 
        RANGO_DE_FECHAS 
    ON
        to_date(TIMESTAMP) BETWEEN FECHA_INICIO_ACTIVOS AND FECHA_FIN
),

INSTALLED_APP_TOTAL AS (
    SELECT * FROM INSTALLED_APP_IOS
    UNION ALL
    SELECT * FROM INSTALLED_APP_ANDROID
),

INSTALLED_APP_BY_USER AS (
    SELECT DISTINCT
        EMAIL
    FROM
        INSTALLED_APP_TOTAL
    INNER JOIN
        SEGMENT_EVENTS.SESSIONM_NEW.SM_USERS
    ON
        lower(INSTALLED_APP_TOTAL.USER_ID) = lower(SM_USERS.USER_ID)
),

CROSSBRAND_PRE_PIVOTED as(
    SELECT
        EMAIL,
        BRAND,
        ROW_NUMBER() OVER (PARTITION BY EMAIL ORDER BY min(FECHA) ASC) AS RN
    FROM
        VENTAS_RESTAURANTES
    GROUP BY
        EMAIL,
        BRAND
),

CROSSBRAND AS (
    SELECT
        EMAIL,
        *
    FROM
        CROSSBRAND_PRE_PIVOTED
    PIVOT(
        SUM(RN)
        FOR BRAND IN ('VIPS MEXICO','THE CHEESECAKE FACTORY MEXICO','CHILIS','ITALIANNIS MEXICO','P.F. CHANGS MEXICO')
    )AS PIVOTE
)


SELECT
    USUARIOS_SESSIONM.FIRST_NAME,
    USUARIOS_SESSIONM.LAST_NAME,
    CASE
        WHEN year(BIRTHDATE) > year(current_date()) - 80 THEN BIRTHDATE
        ELSE null
    END AS BIRTHDATE,
    SEGMENTACION_TOTAL.*,
    CASE
        WHEN INSTALLED_APP_BY_USER.EMAIL IS NOT null THEN true
        ELSE false
    END AS APP_INSTALADA,
    ifnull("'VIPS MEXICO'", 0) AS CROSSBRAND_VIPS_MEXICO,
    ifnull("'THE CHEESECAKE FACTORY MEXICO'", 0) AS CROSSBRAND_THE_CHEESECAKE_FACTORY_MEXICO,
    ifnull("'CHILIS'", 0) AS CROSSBRAND_CHILIS,
    ifnull("'ITALIANNIS MEXICO'", 0) AS CROSSBRAND_ITALIANNIS_MEXICO,
    ifnull("'P.F. CHANGS MEXICO'", 0) AS CROSSBRAND_PF_CHANGS_MEXICO
FROM
    SEGMENTACION_TOTAL
LEFT JOIN 
    WOW_REWARDS.WORK_SPACE_WOW_REWARDS.USUARIOS_SESSIONM
USING(
    EMAIL
)
LEFT JOIN 
    INSTALLED_APP_BY_USER 
USING(
    EMAIL
)
LEFT JOIN
    CROSSBRAND
USING(
    EMAIL
)
;